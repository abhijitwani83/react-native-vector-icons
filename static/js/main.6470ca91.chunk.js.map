{"version":3,"sources":["App.js","index.js"],"names":["WAITING_INTERVAL","Icon","style","fontFamily","this","props","family","String","fromCodePoint","IconFamilies","name","PureComponent","HeaderBar","className","SearchBar","timer","state","keyword","handleSubmit","e","preventDefault","onSubmit","inputRef","value","handleChange","clearInterval","setState","setTimeout","htmlFor","type","id","ref","onChange","placeholder","App","text","matches","Object","keys","sort","forEach","icons","results","filter","indexOf","length","names","renderMatch","match","key","map","renderIcon","renderNotFound","ReactDOM","render","document","getElementById"],"mappings":"0+7TAOMA,EAAmB,IAEnBC,E,iLAOF,OACE,wCAAMC,MAAO,CAAEC,WAAYC,KAAKC,MAAMC,SAAcF,KAAKC,OACtDE,OAAOC,cAAcC,EAAaL,KAAKC,MAAMC,QAAQF,KAAKC,MAAMK,Y,GATtDC,iBAebC,EAAY,SAAAP,GAChB,OACE,yBAAKQ,UAAU,oBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,gBAAd,0CAMFC,E,2MACJC,MAAQ,K,EAERC,MAAQ,CACNC,QAAS,I,EAGXC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKf,MAAMgB,SAAS,EAAKC,SAASC,Q,EAGpCC,aAAe,SAAAL,GACbA,EAAEC,iBACFK,cAAc,EAAKV,OAEnB,EAAKW,SAAS,CAAET,QAAS,EAAKK,SAASC,QAEvC,EAAKR,MAAQY,YACX,kBAAM,EAAKtB,MAAMgB,SAAS,EAAKL,MAAMC,WACrCjB,I,wEAIM,IAAD,OACP,OACE,yBAAKa,UAAU,oBACb,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,cAAcQ,SAAUjB,KAAKc,cAE3C,2BAAOU,QAAQ,eAAef,UAAU,gBACtC,kBAAC,EAAD,CACEP,OAAO,cACPI,KAAK,SACLG,UAAU,iBAGd,2BACEgB,KAAK,OACLC,GAAG,eACHjB,UAAU,eACVkB,IAAK,SAAAA,GAAG,OAAK,EAAKT,SAAWS,GAC7BC,SAAU5B,KAAKoB,aACfS,YAAY,iC,GA3CFtB,iBA4HTuB,E,YAvEb,aAAe,IAAD,8BACZ,+CAUFhB,aAAe,SAAAiB,GACb,IAAIC,EAAU,GACdC,OAAOC,KAAK7B,GACT8B,OACAC,SAAQ,SAAAlC,GACP,IAAMmC,EAAQhC,EAAaH,GAErBoC,EADQL,OAAOC,KAAKG,GACJE,QAAO,SAAAjC,GAAI,OAAIA,EAAKkC,QAAQT,IAAS,KACvDO,EAAQG,SACVT,EAAO,sBAAOA,GAAP,CAAgB,CAAE9B,SAAQwC,MAAOJ,SAI9C,EAAKhB,SAAS,CAAEU,aAxBJ,EA2BdW,YAAc,SAAAC,GAAU,IACd1C,EAAkB0C,EAAlB1C,OAAQwC,EAAUE,EAAVF,MAChB,OACE,yBAAKjC,UAAU,aAAaoC,IAAK3C,GAC/B,wBAAIO,UAAU,gBAAgBP,GAE9B,yBAAKO,UAAU,eACZiC,EAAMI,KAAI,SAAAxC,GAAI,OAAI,EAAKyC,WAAW7C,EAAQI,SAhCjD,EAAKM,MAAQ,CACXoB,QAAS,IAHC,E,iFAQZhC,KAAKc,aAAa,M,iCAgCTZ,EAAQI,GACjB,OACE,yBAAKG,UAAU,wBAAwBoC,IAAKvC,GAC1C,kBAAC,EAAD,CAAMJ,OAAQA,EAAQI,KAAMA,EAAMG,UAAU,gBAC5C,wBAAIA,UAAU,oBAAoBH,M,uCAMtC,OACE,yBAAKG,UAAU,cACb,wBAAIA,UAAU,gBAAd,sB,+BAMJ,OACE,yBAAKA,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWQ,SAAUjB,KAAKc,eAC1B,yBAAKL,UAAU,aACZT,KAAKY,MAAMoB,QAAQc,IAAI9C,KAAK2C,aACE,IAA9B3C,KAAKY,MAAMoB,QAAQS,QAAgBzC,KAAKgD,uB,GAjEjCzC,iBCjFlB0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6470ca91.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\n\nimport IconFamilies from './generated/glyphmapIndex.json';\n\nconst WAITING_INTERVAL = 300;\n\nclass Icon extends PureComponent {\n  static propTypes = {\n    family: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  };\n\n  render() {\n    return (\n      <span style={{ fontFamily: this.props.family }} {...this.props}>\n        {String.fromCodePoint(IconFamilies[this.props.family][this.props.name])}\n      </span>\n    );\n  }\n}\n\nconst HeaderBar = props => {\n  return (\n    <div className=\"Header-Container\">\n      <div className=\"Header-Content\">\n        <h1 className=\"Header-Title\">react-native-vector-icons directory</h1>\n      </div>\n    </div>\n  );\n};\n\nclass SearchBar extends PureComponent {\n  timer = null;\n\n  state = {\n    keyword: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.inputRef.value);\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    clearInterval(this.timer);\n\n    this.setState({ keyword: this.inputRef.value });\n\n    this.timer = setTimeout(\n      () => this.props.onSubmit(this.state.keyword),\n      WAITING_INTERVAL\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"Search-Container\">\n        <div className=\"Search-Content\">\n          <form className=\"Search-Form\" onSubmit={this.handleSubmit}>\n            {/* Clicking the Label focuses the cursor onto the form input */}\n            <label htmlFor=\"Search-Input\" className=\"Search-Label\">\n              <Icon\n                family=\"FontAwesome\"\n                name=\"search\"\n                className=\"Search-Icon\"\n              />\n            </label>\n            <input\n              type=\"text\"\n              id=\"Search-Input\"\n              className=\"Search-Input\"\n              ref={ref => (this.inputRef = ref)}\n              onChange={this.handleChange}\n              placeholder=\"Search for an icon...\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      matches: [],\n    };\n  }\n\n  componentDidMount() {\n    this.handleSubmit('');\n  }\n\n  handleSubmit = text => {\n    let matches = [];\n    Object.keys(IconFamilies)\n      .sort()\n      .forEach(family => {\n        const icons = IconFamilies[family];\n        const names = Object.keys(icons);\n        const results = names.filter(name => name.indexOf(text) >= 0);\n        if (results.length) {\n          matches = [...matches, { family, names: results }];\n        }\n      });\n\n    this.setState({ matches });\n  };\n\n  renderMatch = match => {\n    const { family, names } = match;\n    return (\n      <div className=\"Result-Row\" key={family}>\n        <h2 className=\"Result-Title\">{family}</h2>\n\n        <div className=\"Result-List\">\n          {names.map(name => this.renderIcon(family, name))}\n        </div>\n      </div>\n    );\n  };\n\n  renderIcon(family, name) {\n    return (\n      <div className=\"Result-Icon-Container\" key={name}>\n        <Icon family={family} name={name} className=\"Result-Icon\" />\n        <h4 className=\"Result-Icon-Name\">{name}</h4>\n      </div>\n    );\n  }\n\n  renderNotFound() {\n    return (\n      <div className=\"Result-Row\">\n        <h2 className=\"Result-Title\">Icon not found.</h2>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <HeaderBar />\n        <SearchBar onSubmit={this.handleSubmit} />\n        <div className=\"Container\">\n          {this.state.matches.map(this.renderMatch)}\n          {this.state.matches.length === 0 && this.renderNotFound()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}